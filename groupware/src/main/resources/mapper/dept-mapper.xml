<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samjo.app.emp.mapper.DeptMapper">
	
	<!-- 한 부서에 소속된 사원들 가져오는 Map 정의 -->
	<resultMap type="DeptVO" id="deptMap">
		<id property="deptId" column="dept_id" />
		<result property="deptName" column="dept_name" />
		<collection property="emps" ofType="EmpVO">
			<id property="empId" column="emp_id"/>
			<result property="empName" column="emp_name"/>
			<result property="jobNo" column="job_no"/>
			<result property="jobTitle" column="job_title"/>
		</collection>
	</resultMap>

	<!-- 로그인한 사원의 deptId로 해당 부서의 사원목록 가져오기.  -->
	<select id="selectMyDept" parameterType="EmpVO" resultMap="deptMap">
		SELECT dt.dept_id
		       ,dt.dept_name
		       ,e.emp_id
		       ,e.job_no
		       ,e.emp_name
		       ,j.job_title
		FROM   dept dt JOIN emp e
			             ON(dt.dept_id = e.dept_id)
			           JOIN jobs j
			             ON(e.job_no = j.job_no)
		WHERE  dt.cust_no = #{emp.custNo}
			<if test="!emp.permId.equals('1C2c')">
		   		AND  (
		   				dt.dept_id = #{emp.deptId}
		   			or	j.perm_id = '1C2c'
		   			)
			</if>
		ORDER BY job_no
	</select>
	
	<!-- 한 회의사의 모든 사원 목록. -->
	<select id="selectEmps" resultType="EmpVO">
		SELECT e.emp_id
		      ,e.dept_id
		      ,e.job_no
		      ,dt.dept_name
		      ,e.emp_name
		      ,j.job_title
		FROM emp e JOIN dept dt
		            ON(e.dept_id = dt.dept_id)
		           JOIN jobs j
		            ON(e.job_no = j.job_no)
		WHERE dt.cust_no = #{cno}
		ORDER BY dt.dept_id, e.job_no	
	</select>

	<!-- 부서 전체 목록 -->
	<select id="selectDeptAll" resultType="DeptVO">
		SELECT  dept_id
	            ,cust_no
	            ,dept_name
	            ,dept_loc
	            ,dept_info
	            ,dept_mngr
		FROM   dept
	</select>	
	
	<!-- 프로젝트 등록시 가져올 책임자 목록 -->	
	<select id="respMngrList" resultType="EmpVO">
		SELECT get_deptname(e.dept_id) as dept_name
		      ,e.dept_id
		      ,e.emp_name
		      ,j.job_title
		      ,e.emp_id
		FROM  emp e JOIN jobs j ON (e.job_no = j.job_no)
		WHERE j.perm_id IN ('1C2c', '1C3c')
		AND   e.cust_no = #{cno}  
	</select>
	
	<!-- 상시업무 등록시 가져올 책임자 목록 -->	
	<select id="selectDeptMngr" parameterType="EmpVO" resultType="EmpVO">
		SELECT get_deptname(e.dept_id) as dept_name
		      ,e.dept_id
		      ,e.emp_name
		      ,j.job_title
		      ,e.emp_id
		FROM  emp e JOIN jobs j ON (e.job_no = j.job_no)
		WHERE j.perm_id IN ('1C2c', '1C3c')
		AND   e.cust_no = #{emp.custNo}
			<if test="!emp.permId.equals('1C2c')">
			   	AND  e.dept_id = #{emp.deptId}		        	   
			</if>  
	</select>
	
	<!-- 한 회사의 부서전체 목록 -->
	<select id="selectCustDeptAll" parameterType="EmpVO" resultType="DeptVO">
		SELECT  dept_id
		       ,dept_name
		FROM   dept
		WHERE  cust_no = #{emp.custNo}
	</select>
	
	<!-- 한 회사의 직급전체 목록 -->
	<select id="selectCustJobAll"  parameterType="EmpVO" resultType="JobVO">
		SELECT   job_no
		        ,job_title
		        ,perm_id
		FROM    jobs
		WHERE   cust_no = #{emp.custNo}
		ORDER BY job_no
	</select>

	<!-- 첫계정 등록시 부서등록해야. -->
	<insert id="insertFirstDept" parameterType="EmpVO">
		<selectKey keyProperty="deptId" resultType="string" order="BEFORE">
			SELECT 'DF'||LPAD((NVL((MAX(TO_NUMBER(SUBSTR(dept_id, -3)))),0) + 1), 3, '0')
         	FROM   dept
          	WHERE  dept_id LIKE 'DF%'
		</selectKey>
		INSERT INTO dept(
							dept_id,
		                 	cust_no,
		                 	dept_name,
		                 	dept_loc
		                 )
		  SELECT  #{deptId}
		  		  ,cust_no
		  		  ,'DEPT-TBD'
		  		  ,cust_addr
		  FROM    cust
		  WHERE   cust_no = #{custNo}
	</insert>
	
	<!-- 최초계정 등록시 필요: 최초직급 -->
	<insert id="insertFirstJob" parameterType="EmpVO">
		<selectKey  keyProperty="jobNo" resultType="Integer" order="BEFORE">
			SELECT TO_NUMBER(NVL(MAX(job_no),0)) + 1 
			FROM   jobs
		</selectKey>
		INSERT INTO jobs(
							 job_no
							,perm_id
		                    ,cust_no
		                    ,job_title
		                 )
		  VALUES(
		  			  #{jobNo}
		  			, '1C2c'
		  			, #{custNo}
		  			, '관리자'
		        )
	</insert>
	
	<!-- 계약번호 가져오기 -->
	<select id="selectCurCtNo" parameterType="String" resultType="Integer">
		SELECT ct_no 
		FROM   ct 
		WHERE  cust_no = #{custNo}
		AND    SYSDATE BETWEEN ct_start_dt AND ct_end_dt	
	</select>	
	
	<select id="selectCustDeptinfoAll" parameterType="EmpVO" resultType="DeptVO">
		SELECT    d.dept_id
		        , d.dept_name
		        , d.dept_loc
		        , d.dept_info
		        , d.dept_mngr
		        , e.emp_name as mngr_name
		        , c.cnt
		FROM   dept d LEFT OUTER JOIN emp e
		                           ON (d.dept_mngr = e.emp_id)
		              LEFT OUTER JOIN (SELECT COUNT(*) cnt,dept_id FROM emp GROUP BY dept_id) c
		                           ON (d.dept_id = c.dept_id)
		WHERE  d.cust_no = #{emp.custNo}
		ORDER BY d.dept_id
	</select>
	
	<!-- 같은 부서명 체크 -->
	<select id="countDname" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM dept
		WHERE cust_no = #{cno}
		AND  dept_name = #{dname}
	</select>
	
	<!-- 부서등록. -->
	<insert id="insertDeptInfo" parameterType="DeptVO">
		<selectKey keyProperty="deptId" resultType="string" order="BEFORE">
			SELECT 'D'||LPAD((NVL((MAX(TO_NUMBER(SUBSTR(dept_id, -3)))),0) + 1), 3, '0')
         	FROM   dept
          	WHERE  dept_id LIKE 'D%'
		</selectKey>
		INSERT INTO dept
					(
							dept_id
							,cust_no
							,dept_name
		                 	,dept_loc
		                 	<if test="deptInfo != null and !deptInfo.equals('')">
		                 	,dept_info
		                 	</if>
		                 	<if test="deptMngr != null and !deptMngr.equals('')">
		                 	,dept_mngr
		                 	</if>
		             )
			VALUES
					(
						#{deptId}
						,#{custNo}
						,#{deptName}
						,#{deptLoc}
						<if test="deptInfo != null and !deptInfo.equals('')">
						,#{deptInfo}
						</if>
						<if test="deptMngr != null and !deptMngr.equals('')">
						,#{deptMngr}
						</if>
					)
	</insert>
	
	<!-- 부서장 null -->
	<update id="updateDeptMngr" parameterType="DeptVO">
		UPDATE	dept
		SET 	dept_mngr = null
		WHERE	dept_mngr = #{deptMngr}
		AND		dept_id <![CDATA[<>]]> #{deptId}	
	</update>
	
	<!-- 부서수정 -->
	<update id="updateDeptInfo" parameterType="DeptVO">
		UPDATE  dept
		SET		cust_no = cust_no
			   <if test="deptName != null and !deptName.equals('')">
		       ,dept_name = #{deptName}
		       </if>
			   <if test="deptLoc != null and !deptLoc.equals('')">
		       ,dept_loc  = #{deptLoc}
		       </if>
			   <if test="deptInfo != null and !deptInfo.equals('')">
		       ,dept_info = #{deptInfo}
		       </if>
			   <if test="deptMngr != null and !deptMngr.equals('')">
		       ,dept_mngr = #{deptMngr}
		       </if>
		WHERE   dept_id = #{deptId}		
	</update>
	
	<delete id="deleteDeptInfo" parameterType="map">
		DELETE FROM dept
		WHERE		dept_id = #{did}
		AND			cust_no = #{cno}
	</delete>
	
</mapper>
  