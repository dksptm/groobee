<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.samjo.app.project.mapper.TaskMapper">
	<!-- 프로젝트업무(하위), 협력업체 -->

	<!-- 프로젝트(하위) 업무 전체 조회 -->
	<select id="selectTaskAllList" resultType="ProjectVO"
		parameterType="map">
		SELECT r.*
				FROM (SELECT rownum rn,
						t.*
						FROM (SELECT t.task_no, 
									p.prjt_name, 
									t.task_name, 
									t.task_start_dt, 
									t.task_due_dt,
									get_codename(t.task_type) as task_type, 
									get_codename(t.prjt_mat) as prjt_mat, 	
									(SELECT COUNT(*)
										FROM task_emps te
										WHERE te.task_no = t.task_no) AS participants_cnt,
									(SELECT
										CASE
										WHEN COUNT(*) = 0 THEN 0
										ELSE TRUNC(SUM(CASE WHEN te.cmplt= '5F1f' THEN 1 ELSE 0 END) * 100.0 /COUNT(*))
										END
									FROM task_emps te
									WHERE te.task_no = t.task_no) AS progress
								FROM task_common t JOIN prjt p 
											ON (p.prjt_id = t.standard_no)
					 WHERE t.cust_no = #{cno}
					<if test="sch.keyword != null and sch.keyword != ''">
						AND ${sch.searchCondition} LIKE '%' || #{sch.keyword} || '%'
					</if>
					<if test="sch.taskType != null and sch.taskType != ''">
						AND t.task_type LIKE #{sch.taskType}
					</if>
					<if test="sch.prjtMat != null and sch.prjtMat != ''">
						AND t.prjt_mat LIKE #{sch.prjtMat}
					</if>
				<choose>
					<when test="sch.taskStart != null and sch.taskDue != null">
						AND t.task_start_dt <![CDATA[>=]]> #{sch.taskStart}  AND t.task_due_dt <![CDATA[<=]]> #{sch.taskDue}
					</when>
					<when test="(sch.taskStart != null) and (sch.taskDue == null)">
						AND t.task_start_dt >= #{sch.taskStart}
					</when>
					<when test="(sch.taskDue != null) and (sch.taskStart == null)">
						AND t.task_due_dt <![CDATA[<=]]> #{sch.taskDue}
					</when>
				</choose>
				ORDER BY ${sch.taskSort} ) t 
			WHERE rownum <![CDATA[<=]]> (#{sch.page} * 10)) r
		WHERE r.rn > (#{sch.page} -1) * 10
  	</select>

	<!-- 프로젝트(하위) 업무 페이징 -->
	<select id="taskCount" parameterType="map">
		SELECT COUNT(*)
		FROM task_common t JOIN prjt p
							 ON (p.prjt_id = t.standard_no)
		WHERE t.cust_no = #{cno}
			<!-- 각 검색 조건에 대한 동적 추가 -->
			<if test="sch.keyword != null and sch.keyword != ''">
				AND ${sch.searchCondition} LIKE '%' || #{sch.keyword} || '%'
			</if>
			<if test="sch.taskType != null and sch.taskType != ''">
				AND t.task_type LIKE #{sch.taskType}
			</if>
			<if test="sch.prjtMat != null and sch.prjtMat != ''">
				AND t.prjt_mat LIKE #{sch.prjtMat}
		</if>
		<choose>
				<when test="sch.taskStart != null and sch.taskDue != null">
					AND t.task_start_dt <![CDATA[>=]]> #{sch.taskStart}  AND t.task_due_dt <![CDATA[<=]]> #{sch.taskDue}
				</when>
				<when test="(sch.taskStart != null) and (sch.taskDue == null)">
					AND t.task_start_dt >= #{sch.taskStart}
				</when>
				<when test="(sch.taskDue != null) and (sch.taskStart == null)">
					AND t.task_due_dt <![CDATA[<=]]> #{sch.taskDue}
				</when>
		</choose>
	</select>

	<!-- 프로젝트(하위) 단건 -->
	<select id="selectTask" resultType="ProjectVO">
		SELECT   p.prjt_id
				,p.prjt_name
                ,t.task_no
                ,t.task_name
				,t.task_start_dt
				,t.task_due_dt
				,t.task_purpose
				,t.task_cntn
				,get_codename(t.prjt_mat) as prjt_mat
				,(SELECT
				        CASE
				        WHEN COUNT(*) = 0 THEN 0
				        ELSE TRUNC(SUM(CASE WHEN te.cmplt= '5F1f' THEN 1 ELSE 0 END) * 100.0 /COUNT(*))
				        END
				    FROM task_emps te
				    WHERE te.task_no = t.task_no) AS progress
		FROM task_common t JOIN prjt p
							ON p.prjt_id = t.standard_no
		WHERE t.task_no =  #{taskNo}

	</select>
	
	<!-- 프로젝트 참여자 조회 -->
	<select id="selectTaskEmpList" resultType="TaskEmpsVO">
		SELECT te.task_no
			    ,te.task_emp_id
			    ,te.dept_name
			    ,e.emp_name
			    ,te.cmplt
			FROM task_emps te JOIN emp e 
								ON te.task_emp_Id = e.emp_id
		WHERE te.task_no = #{taskNo}
	</select>
	
	<!-- 프로젝트(하위) 업무 등록 -->
	<insert id="insertTask" parameterType="ProjectVO">
		<selectKey keyProperty="pj.taskNo" resultType="Integer"
			order="BEFORE">
			SELECT NVL(MAX(task_no),0) +1
			FROM task_common
	</selectKey>
		INSERT ALL
		INTO task_common(
							task_no,
							task_name,
							task_purpose,
							task_cntn,
							task_start_dt,
							task_due_dt,
							task_type,
							standard_no,
							prjt_mat,
							dept_id,
							cust_no )
			VALUES (
					#{pj.taskNo},
					#{pj.taskName},
					#{pj.taskPurpose},
					#{pj.taskCntn},
					#{pj.taskStartDt},
					#{pj.taskDueDt},
					#{pj.taskType},
					#{pj.standardNo},
					#{pj.prjtMat},
					#{pj.deptId},
					#{pj.custNo}
			)
		<foreach collection="pj.taskEmps" item="te">
			INTO task_emps (
								task_no,
								task_emp_id,
								dept_id,
								dept_name,
								cust_no )
			VALUES (
					#{pj.taskNo},
					#{te.taskEmpId},
					#{te.deptId},
					#{te.deptName},
					#{pj.custNo})
		</foreach>
		select 1 from dual
	</insert>
	
	<!-- 프로젝트(하위) 업무 참여자 수정 프로시저 실행하기전 참여자의 참여여부를 초기화한다.-->
	<update id="updateTaskEmpBefore" parameterType="Integer">
	    UPDATE task_emps
	    SET cmplt = '5F2f'
	    WHERE task_no = #{taskNo}
	</update>
	
	<!-- 프로젝트(하위) 업무 참여자 수정 프로시저-->
	<update id="updateTaskEmp" parameterType="TaskEmpsVO" statementType="CALLABLE">
		{CALL
			task_ok(
				#{taskNo, mode=IN, jdbcType=INTEGER},
				#{taskEmpId, mode=IN, jdbcType=VARCHAR},
				#{result, mode=OUT, jdbcType=INTEGER}
			)
		}	
	</update>
		
	<!-- 업무완료->프로젝트상태완료  프로시저-->
	<update id="updatePrjt" parameterType="TaskEmpsVO" statementType="CALLABLE">
		{CALL
			prjt_ok(
				#{prjtId, mode=IN, jdbcType=VARCHAR},
				#{ret, mode=OUT, jdbcType=VARCHAR}
			)
		}	
	</update>
	<!-- taskOk에서 사용 -->	
	<update id="upTask"  parameterType="ProjectVO">
	   UPDATE task_common
       SET prjt_mat = '5B1b'
       WHERE task_no = #{taskNo};
	</update>
	
	<update id="upPrjt"  parameterType="ProjectVO">
		UPDATE prjt
      	SET prjt_stat = '5E1e'
      	WHERE prjt_id = #{prjtId}
	</update>
	
	<!-- 프로젝트(하위) 업무 단순조회 협력업체등록시 사용 -->
	<select id="taskList" resultType="ProjectVO" parameterType="EmpVO">
	SELECT task_no,
       		task_name
	FROM task_common
	WHERE prjt_mat = '5B1b'
	AND	cust_no = #{custNo}
	AND task_type = '5A1a'
	</select>
	
	<!-- 업무 전체 수정 -->
	<update id="modifyTask" parameterType="ProjectVO" >
		UPDATE task_common
		SET 	standard_no = standard_no
			<if test="taskName != null and !taskName.equals('')">
				 ,task_name = #{taskName}
			</if>
			<if test="prjtMat != null and !prjtMat.equals('')">
				 ,prjt_mat = #{prjtMat}
			</if>
		    <if test="taskStartDt != null and !taskStartDt.equals('')">
				 ,task_start_dt = #{taskStartDt}
			</if>
		    <if test="taskDueDt != null and !taskDueDt.equals('')">
				 ,task_due_dt = #{taskDueDt}
			</if>
			<if test="taskPurpose != null and !taskPurpose.equals('')">
				 ,task_purpose = #{taskPurpose}
			</if>
		    <if test="taskCntn != null and !taskCntn.equals('')">
				,task_cntn = #{taskCntn}
			</if>
		WHERE task_no= #{taskNo}
	</update>
	
	<!-- 협력업체 전체 조회 -->
	<select id="selectCoopCoAllList" resultType="ProjectVO" parameterType="map">
		SELECT r.*
			FROM (SELECT rownum rn,
						t.*
						FROM (SELECT  c.coop_co_no
						                    , t.task_no
						                    , t.task_name
						                    , c.co_name
						                    , c.co_tel
						                    , c.pic
						                    , c.cust_addr
						                    , c.cntn
								FROM coop_co c JOIN task_common t
						               			 ON c.task_no = t.task_no
					WHERE t.cust_no = #{cno}
					<if test="sch.keyword != null and sch.keyword != ''">
						AND ${sch.searchCondition} LIKE '%' || #{sch.keyword} || '%'
					</if>
				ORDER BY  ${sch.coSort} , c.coop_co_no ) t 
			WHERE rownum <![CDATA[<=]]> (#{sch.page} * 10)) r
		WHERE r.rn > (#{sch.page} -1) * 10 
	</select>
	
	<!-- 협력업체 페이징 -->
	<select id="coCount" parameterType="map">
		SELECT COUNT(*)
		FROM  coop_co c JOIN task_common t
						   ON c.task_no = t.task_no
		WHERE t.cust_no = #{cno}
			<if test="sch.keyword != null and sch.keyword != ''">
					AND ${sch.searchCondition} LIKE '%' || #{sch.keyword} || '%'
			</if>
	</select>
	
	<!-- 협력업체 등록 -->
	<insert id="insertCoop" parameterType="ProjectVO">
		<selectKey keyProperty="coopCoNo" order="BEFORE"
			resultType="Integer">
			SELECT NVL(MAX(coop_co_no),0) +1
			FROM coop_co
		</selectKey>
		INSERT INTO coop_co ( task_no
							,coop_co_no
							,co_name
							,co_tel
							,pic
							,cust_addr
							,cntn)
		VALUES ( #{taskNo}
				,#{coopCoNo}
				,#{coName}
				,#{coTel}
				,#{pic}
				,#{custAddr}
				,#{cntn} )
	</insert>

	<!-- 협력업체 단건 -->
	<select id="selectCoop" resultType="ProjectVO">
		SELECT coop_co_no
						,task_no
						,get_taskname(task_no) as task_name
						,co_name
						,co_tel
						,pic
						,cust_addr
						,cntn
		FROM coop_co
		WHERE coop_co_no = #{coopCoNo}
	</select>
	
	<!-- 협력업체 수정 -->
	<update id="updateCoop" parameterType="ProjectVO">
		UPDATE coop_co
		SET
		<if test="coName != null and !coName.equals('')">
			co_name = #{coName}
		</if>
		<if test="coTel != null and !coTel.equals('')">
			, co_tel = #{coTel}
		</if>
		<if test="pic != null and !pic.equals('')">
			, pic = #{pic}
		</if>
		<if test="custAddr != null and !custAddr.equals('')">
			, cust_addr = #{custAddr}
		</if>
		<if test="cntn != null and !cntn.equals('')">
			, cntn = #{cntn}
		</if>
		WHERE coop_co_no =#{coopCoNo}
	</update>

	<!--협력업체 삭제 -->
	<delete id="deleteCoop" parameterType="ProjectVO">
		DELETE FROM coop_co
		WHERE coop_co_no = #{coopCoNo}
	</delete> 

</mapper>